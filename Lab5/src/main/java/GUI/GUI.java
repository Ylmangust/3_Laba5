/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Excel.Result;
import Excel.ExcelOperator;
import Fighters.ActionType;
import Fighters.enemyFactory.Enemy;
import Items.Item;
import Fighters.Human;
import java.awt.Font;
import java.awt.Image;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import mephi.b22901.lab5.Controller;
import Model.GamePhase;

/**
 *
 * @author Регина
 */
public class GUI extends javax.swing.JFrame {

    private String[] arenas = {"/arena1.jpeg", "/arena2.jpeg", "/arena3.jpeg", "/arena4.jpeg", "/arena5.jpeg"};
    private Controller controller;

    /**
     * Creates new form GUI
     *
     * @param ctrl
     */
    public GUI(Controller ctrl) {
        this.controller = ctrl;
        UIManager.put("OptionPane.messageFont", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("OptionPane.buttonFont", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("Label.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("Button.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("TextField.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("TextArea.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("RadioButton.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("Table.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("CheckBox.font", new Font("Comic Sans MS", Font.PLAIN, 14));
        UIManager.put("defaultFont", new Font("Comic Sans MS", Font.PLAIN, 14));

        initComponents();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        JTable table = resultsTable;
        for (int i = 0; i < 3; i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        statsBtnGroup.add(damageRBtn);
        statsBtnGroup.add(hpRBtn);
        hpRBtn.setText("Максимальное здоровье");
        hpRBtn.setActionCommand("Максимальное здоровье");
        damageRBtn.setText("Урон");
        damageRBtn.setActionCommand("Урон");

        itemsBtnGroup.add(item1);
        itemsBtnGroup.add(item2);
        itemsBtnGroup.add(item3);

        locationNumber.addChangeListener(e -> {
            int value = locationNumber.getValue();
            infoLocation.setText("Выбрано локаций: " + String.valueOf(value));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        locationChoiceWindow = new javax.swing.JDialog();
        panel = new javax.swing.JPanel();
        chooseLabel = new javax.swing.JLabel();
        startBtn = new javax.swing.JButton();
        locationNumber = new javax.swing.JSlider();
        infoLocation = new javax.swing.JLabel();
        resultsWindow = new javax.swing.JDialog();
        tableScrollPane = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        tableNameLbl = new javax.swing.JLabel();
        closeResultsBtn = new javax.swing.JButton();
        itemBagWindow = new javax.swing.JDialog();
        itemPanel = new javax.swing.JPanel();
        windowLabel = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        useBtn = new javax.swing.JButton();
        item3 = new javax.swing.JRadioButton();
        item2 = new javax.swing.JRadioButton();
        item1 = new javax.swing.JRadioButton();
        chooseStatWindow = new javax.swing.JDialog();
        statPanel = new javax.swing.JPanel();
        congratLabel = new javax.swing.JLabel("<html><b>Поздравляем, Боец!</b><br/><br/>" +"Ты успешно прошел уровень! Твоя храбрость и мастерство впечатляют" +
            "Теперь у тебя есть возможность улучшить свои навыки, чтобы стать еще сильнее!</html>");
        chooseStatLabel = new javax.swing.JLabel();
        hpRBtn = new javax.swing.JRadioButton();
        damageRBtn = new javax.swing.JRadioButton();
        chooseStatBtn = new javax.swing.JButton();
        statsBtnGroup = new javax.swing.ButtonGroup();
        gameWindow = new javax.swing.JFrame();
        gamePanel = new Background();
        weakenBtn = new javax.swing.JButton();
        defendBtn = new javax.swing.JButton();
        humanHPBar = new javax.swing.JProgressBar();
        enemyHPBar = new javax.swing.JProgressBar();
        enemyName = new javax.swing.JLabel();
        enemyDamafeLbl = new javax.swing.JLabel();
        humanDamageLbl = new javax.swing.JLabel();
        humanDamageValue = new javax.swing.JLabel();
        enemyDamageValue = new javax.swing.JLabel();
        humanLvl = new javax.swing.JLabel();
        LocationName = new javax.swing.JLabel();
        experienceLbl = new javax.swing.JLabel();
        pointsLbl = new javax.swing.JLabel();
        experienceValue = new javax.swing.JLabel();
        pointsValue = new javax.swing.JLabel();
        enemyLvl = new javax.swing.JLabel();
        itemsBtn = new javax.swing.JButton();
        attackBtn = new javax.swing.JButton();
        humanHpLbl = new javax.swing.JLabel();
        enemyHpLbl = new javax.swing.JLabel();
        playerName = new javax.swing.JLabel();
        enemyMove = new javax.swing.JLabel();
        playerMove = new javax.swing.JLabel();
        turnLabel = new javax.swing.JLabel();
        humanImage = new javax.swing.JLabel();
        enemyImage = new javax.swing.JLabel();
        nextStepBtn = new javax.swing.JButton();
        enemyDebuff = new javax.swing.JLabel();
        playerDebuff = new javax.swing.JLabel();
        itemsBtnGroup = new javax.swing.ButtonGroup();
        successEndGameFrame = new javax.swing.JDialog();
        endGamePanel = new javax.swing.JPanel();
        congratLbl = new javax.swing.JLabel();
        enterNameLbl = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        saveResultBtn = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        greetingLabel = new javax.swing.JLabel();
        showResultsBtn = new javax.swing.JButton();
        newGameBtn = new javax.swing.JButton();

        locationChoiceWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        locationChoiceWindow.setTitle("Выбор локаций");
        locationChoiceWindow.setModal(true);
        locationChoiceWindow.setResizable(false);

        chooseLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        chooseLabel.setText("Бой начинается... Выбери количество локаций.");

        startBtn.setText("Начать");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        locationNumber.setMajorTickSpacing(1);
        locationNumber.setMaximum(5);
        locationNumber.setMinimum(1);
        locationNumber.setPaintTicks(true);
        locationNumber.setSnapToTicks(true);
        locationNumber.setValue(2);

        infoLocation.setText(String.valueOf("Выбрано локаций: " +locationNumber.getValue())
        );

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(chooseLabel))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(locationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(startBtn)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(infoLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(chooseLabel)
                .addGap(32, 32, 32)
                .addComponent(locationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(infoLocation)
                .addGap(34, 34, 34)
                .addComponent(startBtn)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout locationChoiceWindowLayout = new javax.swing.GroupLayout(locationChoiceWindow.getContentPane());
        locationChoiceWindow.getContentPane().setLayout(locationChoiceWindowLayout);
        locationChoiceWindowLayout.setHorizontalGroup(
            locationChoiceWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locationChoiceWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        locationChoiceWindowLayout.setVerticalGroup(
            locationChoiceWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, locationChoiceWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        resultsWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        resultsWindow.setTitle("Таблица рекордов");
        resultsWindow.setModal(true);
        resultsWindow.setResizable(false);

        tableScrollPane.setFocusCycleRoot(true);

        resultsTable.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "№", "Имя", "Количество очков"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPane.setViewportView(resultsTable);

        tableNameLbl.setText("Таблица рекордов");

        closeResultsBtn.setText("Закрыть");
        closeResultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeResultsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout resultsWindowLayout = new javax.swing.GroupLayout(resultsWindow.getContentPane());
        resultsWindow.getContentPane().setLayout(resultsWindowLayout);
        resultsWindowLayout.setHorizontalGroup(
            resultsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsWindowLayout.createSequentialGroup()
                        .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsWindowLayout.createSequentialGroup()
                        .addGap(0, 143, Short.MAX_VALUE)
                        .addGroup(resultsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsWindowLayout.createSequentialGroup()
                                .addComponent(tableNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(133, 133, 133))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsWindowLayout.createSequentialGroup()
                                .addComponent(closeResultsBtn)
                                .addGap(23, 23, 23))))))
        );
        resultsWindowLayout.setVerticalGroup(
            resultsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsWindowLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(tableNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeResultsBtn)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        itemBagWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        itemBagWindow.setResizable(false);

        windowLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        windowLabel.setText("Мешок предметов");

        cancelBtn.setText("Закрыть");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        useBtn.setText("Использовать");
        useBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useBtnActionPerformed(evt);
            }
        });

        item3.setText(" ");
        item3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item3ActionPerformed(evt);
            }
        });

        item2.setText(" ");
        item2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item2ActionPerformed(evt);
            }
        });

        item1.setText(" ");

        javax.swing.GroupLayout itemPanelLayout = new javax.swing.GroupLayout(itemPanel);
        itemPanel.setLayout(itemPanelLayout);
        itemPanelLayout.setHorizontalGroup(
            itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelLayout.createSequentialGroup()
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemPanelLayout.createSequentialGroup()
                                .addComponent(item1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(item3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(item2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(itemPanelLayout.createSequentialGroup()
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(itemPanelLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(windowLabel))
                            .addGroup(itemPanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(useBtn)
                                .addGap(26, 26, 26)
                                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
        );
        itemPanelLayout.setVerticalGroup(
            itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(windowLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(item1)
                .addGap(18, 18, 18)
                .addComponent(item2)
                .addGap(18, 18, 18)
                .addComponent(item3)
                .addGap(28, 28, 28)
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(useBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout itemBagWindowLayout = new javax.swing.GroupLayout(itemBagWindow.getContentPane());
        itemBagWindow.getContentPane().setLayout(itemBagWindowLayout);
        itemBagWindowLayout.setHorizontalGroup(
            itemBagWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemBagWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        itemBagWindowLayout.setVerticalGroup(
            itemBagWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemBagWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        chooseStatWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        chooseStatWindow.setTitle("Переход на новый уровень");
        chooseStatWindow.setModal(true);
        chooseStatWindow.setResizable(false);

        congratLabel.setText(" Поздравляем, Боец! Ты успешно прошел уровень!   ");

        chooseStatLabel.setText("Теперь у тебя есть возможность улучшить свои навыки. ");

        hpRBtn.setText("Максимальное здоровье");
        hpRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hpRBtnActionPerformed(evt);
            }
        });

        damageRBtn.setText("Урон");

        chooseStatBtn.setText("Выбрать ");
        chooseStatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseStatBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statPanelLayout = new javax.swing.GroupLayout(statPanel);
        statPanel.setLayout(statPanelLayout);
        statPanelLayout.setHorizontalGroup(
            statPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statPanelLayout.createSequentialGroup()
                .addGroup(statPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statPanelLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(statPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(damageRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hpRBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(statPanelLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(chooseStatBtn))
                    .addGroup(statPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(statPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(congratLabel)
                                .addGap(12, 12, 12))
                            .addComponent(chooseStatLabel))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        statPanelLayout.setVerticalGroup(
            statPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(congratLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooseStatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hpRBtn)
                .addGap(18, 18, 18)
                .addComponent(damageRBtn)
                .addGap(36, 36, 36)
                .addComponent(chooseStatBtn)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout chooseStatWindowLayout = new javax.swing.GroupLayout(chooseStatWindow.getContentPane());
        chooseStatWindow.getContentPane().setLayout(chooseStatWindowLayout);
        chooseStatWindowLayout.setHorizontalGroup(
            chooseStatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        chooseStatWindowLayout.setVerticalGroup(
            chooseStatWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        gameWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        gameWindow.setResizable(false);
        gameWindow.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                gameWindowWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                gameWindowWindowOpened(evt);
            }
        });

        gamePanel.setBackground(new java.awt.Color(255, 255, 255));

        weakenBtn.setText("Ослабить");
        weakenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weakenBtnActionPerformed(evt);
            }
        });

        defendBtn.setText("Защититься");
        defendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defendBtnActionPerformed(evt);
            }
        });

        humanHPBar.setBackground(new java.awt.Color(204, 204, 204));
        humanHPBar.setForeground(new java.awt.Color(0, 153, 153));
        humanHPBar.setMaximum(80);
        humanHPBar.setMinimum(-1);

        enemyHPBar.setBackground(new java.awt.Color(204, 204, 204));
        enemyHPBar.setForeground(new java.awt.Color(0, 153, 153));
        enemyHPBar.setMinimum(-1);

        enemyName.setBackground(new java.awt.Color(0, 0, 0));
        enemyName.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N

        enemyDamafeLbl.setBackground(new java.awt.Color(255, 255, 255));
        enemyDamafeLbl.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        enemyDamafeLbl.setText("Урон");

        humanDamageLbl.setBackground(new java.awt.Color(255, 255, 255));
        humanDamageLbl.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        humanDamageLbl.setText("Урон");

        humanDamageValue.setBackground(new java.awt.Color(255, 255, 255));
        humanDamageValue.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        humanDamageValue.setForeground(new java.awt.Color(255, 0, 0));
        humanDamageValue.setText("16");

        enemyDamageValue.setBackground(new java.awt.Color(255, 255, 255));
        enemyDamageValue.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        enemyDamageValue.setForeground(new java.awt.Color(255, 0, 0));
        enemyDamageValue.setText(" ");

        humanLvl.setBackground(new java.awt.Color(255, 255, 255));
        humanLvl.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        humanLvl.setText("0 уровень");

        LocationName.setBackground(new java.awt.Color(255, 255, 255));
        LocationName.setFont(new java.awt.Font("Comic Sans MS", 3, 36)); // NOI18N
        LocationName.setForeground(new java.awt.Color(0, 0, 153));
        LocationName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LocationName.setText(" ");
        LocationName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        experienceLbl.setBackground(new java.awt.Color(255, 255, 255));
        experienceLbl.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        experienceLbl.setText("побеждено");

        pointsLbl.setBackground(new java.awt.Color(255, 255, 255));
        pointsLbl.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        pointsLbl.setText("очки");

        experienceValue.setBackground(new java.awt.Color(255, 255, 255));
        experienceValue.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        experienceValue.setText("0/36");

        pointsValue.setBackground(new java.awt.Color(255, 255, 255));
        pointsValue.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        pointsValue.setText("00");

        enemyLvl.setBackground(new java.awt.Color(255, 255, 255));
        enemyLvl.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        enemyLvl.setText("1 уровень");

        itemsBtn.setText("Предметы");
        itemsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsBtnActionPerformed(evt);
            }
        });

        attackBtn.setText("Атаковать");
        attackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackBtnActionPerformed(evt);
            }
        });

        humanHpLbl.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        humanHpLbl.setText(" ");

        enemyHpLbl.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        enemyHpLbl.setText(" ");

        playerName.setBackground(new java.awt.Color(0, 0, 0));
        playerName.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        playerName.setText("Игрок (Вы)");

        enemyMove.setBackground(new java.awt.Color(231, 231, 231));
        enemyMove.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N
        enemyMove.setText(" ");

        playerMove.setBackground(new java.awt.Color(231, 231, 231));
        playerMove.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N

        turnLabel.setBackground(new java.awt.Color(231, 231, 231));
        turnLabel.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N
        turnLabel.setText("Ваш ход");

        nextStepBtn.setText("Далее");
        nextStepBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextStepBtnActionPerformed(evt);
            }
        });

        enemyDebuff.setText(" ");

        playerDebuff.setText(" ");

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemyLvl)
                    .addComponent(enemyHpLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(362, 362, 362)
                                .addComponent(LocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(884, 884, 884)
                                .addComponent(humanDamageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(humanDamageValue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(enemyHPBar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gamePanelLayout.createSequentialGroup()
                                .addComponent(enemyDamafeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enemyDamageValue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(gamePanelLayout.createSequentialGroup()
                                        .addGap(134, 134, 134)
                                        .addComponent(pointsLbl))
                                    .addGroup(gamePanelLayout.createSequentialGroup()
                                        .addGap(149, 149, 149)
                                        .addComponent(pointsValue)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                                        .addComponent(experienceLbl)
                                        .addGap(94, 94, 94))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                                        .addComponent(experienceValue)
                                        .addGap(122, 122, 122)))
                                .addComponent(humanHpLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(humanHPBar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98))
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(playerMove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(enemyMove, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(enemyName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(nextStepBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(enemyImage, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enemyDebuff, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                                .addComponent(humanLvl)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(itemsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(turnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(gamePanelLayout.createSequentialGroup()
                                                .addComponent(playerDebuff, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(humanImage, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(104, 104, 104))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                                        .addComponent(attackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(defendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(weakenBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51))))))))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(LocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(experienceLbl)
                                    .addComponent(pointsLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(experienceValue))
                            .addComponent(pointsValue))
                        .addGap(66, 66, 66)
                        .addComponent(humanImage, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(humanHpLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                            .addComponent(humanHPBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(enemyHPBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(enemyHpLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enemyDamafeLbl)
                            .addComponent(enemyDamageValue)
                            .addComponent(humanDamageValue)
                            .addComponent(humanDamageLbl))
                        .addGap(15, 15, 15)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enemyLvl)
                            .addComponent(humanLvl)))
                    .addComponent(enemyImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                        .addComponent(turnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(enemyMove, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(playerMove, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enemyDebuff)
                            .addComponent(playerDebuff))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weakenBtn)
                    .addComponent(defendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextStepBtn))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout gameWindowLayout = new javax.swing.GroupLayout(gameWindow.getContentPane());
        gameWindow.getContentPane().setLayout(gameWindowLayout);
        gameWindowLayout.setHorizontalGroup(
            gameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        gameWindowLayout.setVerticalGroup(
            gameWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        successEndGameFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        successEndGameFrame.setModal(true);

        congratLbl.setText("Поздравляю, боец, ты дошел до конца!");

        enterNameLbl.setText("Введи свое имя для сохранения результата");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        saveResultBtn.setText("Сохранить");
        saveResultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveResultBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout endGamePanelLayout = new javax.swing.GroupLayout(endGamePanel);
        endGamePanel.setLayout(endGamePanelLayout);
        endGamePanelLayout.setHorizontalGroup(
            endGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endGamePanelLayout.createSequentialGroup()
                .addGap(0, 73, Short.MAX_VALUE)
                .addGroup(endGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endGamePanelLayout.createSequentialGroup()
                        .addComponent(congratLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endGamePanelLayout.createSequentialGroup()
                        .addComponent(enterNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
            .addGroup(endGamePanelLayout.createSequentialGroup()
                .addGroup(endGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(endGamePanelLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(endGamePanelLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(saveResultBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        endGamePanelLayout.setVerticalGroup(
            endGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(endGamePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(congratLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterNameLbl)
                .addGap(39, 39, 39)
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(saveResultBtn)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout successEndGameFrameLayout = new javax.swing.GroupLayout(successEndGameFrame.getContentPane());
        successEndGameFrame.getContentPane().setLayout(successEndGameFrameLayout);
        successEndGameFrameLayout.setHorizontalGroup(
            successEndGameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(endGamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        successEndGameFrameLayout.setVerticalGroup(
            successEndGameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(endGamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        greetingLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        greetingLabel.setText("Добро пожаловать в Mortal Kombat, боец! ");

        showResultsBtn.setText("Посмотреть таблицу результатов");
        showResultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showResultsBtnActionPerformed(evt);
            }
        });

        newGameBtn.setText("Начать новую игру");
        newGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(showResultsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(greetingLabel)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(greetingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showResultsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        int locationsNum = locationNumber.getValue();
        controller.startGame(locationsNum);
        setHumanImage();
        updateLabels();
        newEnemyImage();
        gameWindow.pack();
        ((Background) gamePanel).setBackgroundImage(arenas[0]);
        gameWindow.setLocationRelativeTo(this);
        gameWindow.setVisible(true);
        locationChoiceWindow.dispose();

    }//GEN-LAST:event_startBtnActionPerformed

    private void showResultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showResultsBtnActionPerformed
        List<Result> results = ExcelOperator.readResults();
        if (!results.isEmpty()) {
            DefaultTableModel table = (DefaultTableModel) resultsTable.getModel();
            for (int i = 0; i < results.size(); i++) {
                if (i < 10) {
                    table.setValueAt(i + 1, i, 0);
                    table.setValueAt(results.get(i).getName(), i, 1);
                    table.setValueAt(results.get(i).getPoints(), i, 2);
                }
            }

            resultsWindow.pack();
            resultsWindow.setLocationRelativeTo(this);
            resultsWindow.setVisible(true);
        }
    }//GEN-LAST:event_showResultsBtnActionPerformed

    private void newGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameBtnActionPerformed
        locationChoiceWindow.pack();
        locationChoiceWindow.setLocationRelativeTo(this);
        locationChoiceWindow.setVisible(true);
    }//GEN-LAST:event_newGameBtnActionPerformed

    private void chooseStatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseStatBtnActionPerformed
        ButtonModel selectedItem = statsBtnGroup.getSelection();
        if (selectedItem != null) {
            String chosenStat = selectedItem.getActionCommand();
            controller.startNewRound(chosenStat);
            chooseStatWindow.dispose();
            int locationIndex = controller.getHuman().getLevel() - 1;
            ((Background) gamePanel).setBackgroundImage(arenas[locationIndex]);

            gameWindow.setVisible(true);
            updateLabels();
        } else {
            JOptionPane.showMessageDialog(null, "Необходимо выбрать хотя бы 1 навык для улучшения!", null, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_chooseStatBtnActionPerformed

    private void item2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_item2ActionPerformed

    private void item3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item3ActionPerformed
        if (item3.isSelected()) {
            itemsBtnGroup.setSelected(item1.getModel(), true);
        }
    }//GEN-LAST:event_item3ActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        itemBagWindow.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void closeResultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeResultsBtnActionPerformed
        resultsWindow.dispose();
    }//GEN-LAST:event_closeResultsBtnActionPerformed

    private void useBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useBtnActionPerformed
        ButtonModel selectedItem = itemsBtnGroup.getSelection();
        if (selectedItem != null) {
            String itemInfo = selectedItem.getActionCommand();
            List<Item> items = controller.getItems();
            for (int i = 0; i < items.size(); i++) {
                if (items.get(i).toString().equals(itemInfo)) {
                    controller.useItem(i);
                }
            }
        }

    }//GEN-LAST:event_useBtnActionPerformed

    private void attackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackBtnActionPerformed
        controller.getHuman().setActionStatus(ActionType.ATTACK);
        lockPlayerActionButtons();
        nextStepBtn.setEnabled(true);

    }//GEN-LAST:event_attackBtnActionPerformed

    private void itemsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsBtnActionPerformed
        List<Item> items = controller.getItems();
        item1.setText(items.get(0).toString());
        item2.setText(items.get(1).toString());
        item3.setText(items.get(2).toString());
        item1.setActionCommand(items.get(0).toString());
        item2.setActionCommand(items.get(1).toString());
        item3.setActionCommand(items.get(2).toString());
        itemBagWindow.pack();
        itemBagWindow.setLocationRelativeTo(this);
        itemBagWindow.setVisible(true);
    }//GEN-LAST:event_itemsBtnActionPerformed

    private void defendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defendBtnActionPerformed
        controller.getHuman().setActionStatus(ActionType.DEFEND);
        lockPlayerActionButtons();
        nextStepBtn.setEnabled(true);

    }//GEN-LAST:event_defendBtnActionPerformed

    private void weakenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weakenBtnActionPerformed
        controller.getHuman().setActionStatus(ActionType.DEBUFF);
        lockPlayerActionButtons();
        nextStepBtn.setEnabled(true);
    }//GEN-LAST:event_weakenBtnActionPerformed

    private void nextStepBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextStepBtnActionPerformed
        controller.move();      // Фаза меняется
        updateLabels();
    }//GEN-LAST:event_nextStepBtnActionPerformed

    private void hpRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hpRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hpRBtnActionPerformed

    private void gameWindowWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_gameWindowWindowClosing
        this.setEnabled(true);
        this.setVisible(true);
    }//GEN-LAST:event_gameWindowWindowClosing

    private void gameWindowWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_gameWindowWindowOpened
        this.setEnabled(false);
        this.setVisible(false);
    }//GEN-LAST:event_gameWindowWindowOpened

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void saveResultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveResultBtnActionPerformed
        String name = nameField.getText();
        int score = controller.getHuman().getPoints();
        successEndGameFrame.dispose();
        gameWindow.dispose();
        ExcelOperator.writeResults(name, score);
    }//GEN-LAST:event_saveResultBtnActionPerformed

    public void updateLabels() {
        GamePhase phase = controller.getPhase();
        turnLabel.setText(phase.getText());
        boolean playerTurn = (phase == GamePhase.PLAYER_TURN || phase == GamePhase.PLAYER_ANSWER);
        attackBtn.setEnabled(playerTurn);
        defendBtn.setEnabled(playerTurn);
        weakenBtn.setEnabled(playerTurn);
        nextStepBtn.setEnabled(!playerTurn);

        Human player = controller.getHuman();
        if (player.getHp() < 0) {
            humanHpLbl.setText(0 + "/" + player.getMaxHP());
        } else {
            humanHpLbl.setText(player.getHp() + "/" + player.getMaxHP());
        }
        humanHPBar.setValue(player.getHp());
        humanDamageValue.setText(String.valueOf(player.getDamage()));
        humanLvl.setText(String.valueOf(player.getLevel()) + " уровень");
        experienceValue.setText(String.valueOf(player.getWins()) + "/35");
        pointsValue.setText(String.valueOf(player.getPoints()));
        if (player.getActionStatus() == null) {
            playerMove.setText("Ваше действие: ");
        } else {
            playerMove.setText("Ваше действие: " + player.getActionStatus().getText());
        }
        if (player.isDebuffed()){
            playerDebuff.setText("Ослаблен, до снятия: " + player.getDebuffTimer());
        }else{
            playerDebuff.setText(" ");
        }

        Enemy enemy = controller.getEnemy();
        newEnemyImage();
        if (enemy.getHp() < 0) {
            enemyHpLbl.setText(0 + "/" + enemy.getMaxHP());
        } else {
            enemyHpLbl.setText(enemy.getHp() + "/" + enemy.getMaxHP());
        }
        enemyHPBar.setValue(enemy.getHp());
        enemyDamageValue.setText(String.valueOf(enemy.getDamage()));
        enemyLvl.setText(String.valueOf(enemy.getLevel()) + " уровень");
        if (enemy.getActionStatus() == null) {
            enemyMove.setText("Действие противника: ");
        } else {
            enemyMove.setText("Действие противника: " + enemy.getActionStatus().getText());
        }
        if (enemy.isDebuffed()){
            enemyDebuff.setText("Ослаблен, до снятия: " + enemy.getDebuffTimer());
        }else{
            enemyDebuff.setText(" ");
        }
    }

    private void lockPlayerActionButtons() {
        attackBtn.setEnabled(false);
        defendBtn.setEnabled(false);
        weakenBtn.setEnabled(false);
    }

    private void newEnemyImage() {
        Enemy enemy = controller.getEnemy();
        ImageIcon icon = new ImageIcon(getClass().getResource(enemy.getPhotoPath()));
        Image originalImage = icon.getImage();
        Image scaledImage = originalImage.getScaledInstance(241, 341, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        enemyImage.setIcon(scaledIcon);
        enemyName.setText(enemy.toString() + " (" + enemy.getType() + ")");

    }

    private void setHumanImage() {
        Human human = controller.getHuman();
        ImageIcon icon = new ImageIcon(getClass().getResource(human.getPhotoPath()));
        Image originalImage = icon.getImage();
        Image scaledImage = originalImage.getScaledInstance(241, 341, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        humanImage.setIcon(scaledIcon);
    }

    public void showStats() {
        gameWindow.setVisible(false);
        chooseStatWindow.pack();
        chooseStatWindow.setLocationRelativeTo(this);
        chooseStatWindow.setVisible(true);
    }

    public void endGame() {
        JOptionPane.showMessageDialog(null, "Ты оказался слаб, боец! Попытай удачу в следующий раз.", null, JOptionPane.WARNING_MESSAGE);
        gameWindow.dispose();
    }

    public void successEndGame() {
        successEndGameFrame.pack();
        successEndGameFrame.setLocationRelativeTo(this);
        successEndGameFrame.setVisible(true);
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LocationName;
    private javax.swing.JButton attackBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel chooseLabel;
    private javax.swing.JButton chooseStatBtn;
    private javax.swing.JLabel chooseStatLabel;
    private javax.swing.JDialog chooseStatWindow;
    private javax.swing.JButton closeResultsBtn;
    private javax.swing.JLabel congratLabel;
    private javax.swing.JLabel congratLbl;
    private javax.swing.JRadioButton damageRBtn;
    private javax.swing.JButton defendBtn;
    private javax.swing.JPanel endGamePanel;
    private javax.swing.JLabel enemyDamafeLbl;
    private javax.swing.JLabel enemyDamageValue;
    private javax.swing.JLabel enemyDebuff;
    private javax.swing.JProgressBar enemyHPBar;
    private javax.swing.JLabel enemyHpLbl;
    private javax.swing.JLabel enemyImage;
    private javax.swing.JLabel enemyLvl;
    private javax.swing.JLabel enemyMove;
    private javax.swing.JLabel enemyName;
    private javax.swing.JLabel enterNameLbl;
    private javax.swing.JLabel experienceLbl;
    private javax.swing.JLabel experienceValue;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JFrame gameWindow;
    private javax.swing.JLabel greetingLabel;
    private javax.swing.JRadioButton hpRBtn;
    private javax.swing.JLabel humanDamageLbl;
    private javax.swing.JLabel humanDamageValue;
    private javax.swing.JProgressBar humanHPBar;
    private javax.swing.JLabel humanHpLbl;
    private javax.swing.JLabel humanImage;
    private javax.swing.JLabel humanLvl;
    private javax.swing.JLabel infoLocation;
    private javax.swing.JRadioButton item1;
    private javax.swing.JRadioButton item2;
    private javax.swing.JRadioButton item3;
    private javax.swing.JDialog itemBagWindow;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JButton itemsBtn;
    private javax.swing.ButtonGroup itemsBtnGroup;
    private javax.swing.JDialog locationChoiceWindow;
    private javax.swing.JSlider locationNumber;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton newGameBtn;
    private javax.swing.JButton nextStepBtn;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel playerDebuff;
    private javax.swing.JLabel playerMove;
    private javax.swing.JLabel playerName;
    private javax.swing.JLabel pointsLbl;
    private javax.swing.JLabel pointsValue;
    private javax.swing.JTable resultsTable;
    private javax.swing.JDialog resultsWindow;
    private javax.swing.JButton saveResultBtn;
    private javax.swing.JButton showResultsBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JPanel statPanel;
    private javax.swing.ButtonGroup statsBtnGroup;
    private javax.swing.JDialog successEndGameFrame;
    private javax.swing.JLabel tableNameLbl;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel turnLabel;
    private javax.swing.JButton useBtn;
    private javax.swing.JButton weakenBtn;
    private javax.swing.JLabel windowLabel;
    // End of variables declaration//GEN-END:variables
}
